@model CreateCourseBindingModel
@{
    ViewData["Title"] = "Create course";
}

<h2>@ViewData["Title"]</h2>
<form asp-area="Admin" asp-controller="Courses" asp-action="Create" method="post" class="form-horizontal">
    <div class="form-group">
        <label class="control-label col-sm-2" asp-for="Name"></label>
        <div class="col-sm-10">
            <input class="form-control" asp-for="Name">
            <span class="text-danger" asp-validation-for="Name"></span>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" asp-for="Slug"></label>
        <div class="col-sm-10">
            <input class="form-control" asp-for="Slug">
            <span class="text-danger" asp-validation-for="Slug"></span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-10 col-sm-push-2">
            <input type="submit" value="Create" class="btn btn-success" />
            <a asp-area="Admin" asp-controller="Courses" asp-action="Index" class="btn btn-default">Cancel</a>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        function createSlug(nameElementId, slugElementId) {
            $(`#${nameElementId}`).change(function (e) {
                let value = $(this).val();
                let slug = value.toLowerCase().replace(/ /g, "-");
                $(`#${slugElementId}`).val(slug);
            });
        }

        $(function () {
            createSlug("@(Html.IdFor(model => model.Name))", "@(Html.IdFor(model => model.Slug))");
        });
    </script>
}
